{
	"info": {
		"_postman_id": "4e16632d-3cad-4b03-ac69-d9aee95bd5fa",
		"name": "ReceiptProcessorTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23628799"
	},
	"item": [
		{
			"name": "Process Receipt - Works with a valid receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"RECEIPT_ID\",pm.response.json().id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns a valid UUID\", function () {",
							"  pm.expect(pm.response.json().id).to.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"M&M Corner Market\",\n  \"purchaseDate\": \"2022-03-20\",\n  \"purchaseTime\": \"14:33\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },{\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },{\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },{\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    }\n  ],\n  \"total\": \"9.00\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:{{PORT}}/receipts/process",
					"host": [
						"localhost"
					],
					"port": "{{PORT}}",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve - Returns correct points",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns correct number of points\", function () {",
							"    pm.expect(pm.response.json().points).to.equal(109)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:{{PORT}}/receipts/{{RECEIPT_ID}}/points",
					"host": [
						"localhost"
					],
					"port": "{{PORT}}",
					"path": [
						"receipts",
						"{{RECEIPT_ID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Process Receipt - Missing field returns an error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Message is correct\", function () {",
							"    pm.response.to.have.body(\"The receipt is invalid\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"M&M Corner Market\",\n  \"purchaseDate\": \"2022-03-20\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },{\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },{\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },{\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    }\n  ],\n  \"total\": \"9.00\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:{{PORT}}/receipts/process",
					"host": [
						"localhost"
					],
					"port": "{{PORT}}",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve - Id that isn't in the DB returns an error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Message is correct\", function () {",
							"    pm.response.to.have.body(\"No receipt found for that id\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:{{PORT}}/receipts/d672fd73-8463-4eac-ba8d-f68e055ad7ea/points",
					"host": [
						"localhost"
					],
					"port": "{{PORT}}",
					"path": [
						"receipts",
						"d672fd73-8463-4eac-ba8d-f68e055ad7ea",
						"points"
					]
				}
			},
			"response": []
		}
	]
}